syntax = "proto3";
package device_utils;
option go_package = "github.com/BRUHItsABunny/device-utils";

message Browser {
  message TLSFingerprint {

    // - RFC 5246 (TLS 1.2): https://tools.ietf.org/html/rfc5246
    // - RFC 6101 (SSL 3.0): https://tools.ietf.org/html/rfc6101
    // https://github.com/openssl/openssl/blob/c04e78f0c69201226430fed14c291c281da47f2d/include/openssl/prov_ssl.h
    enum ProtocolVersion {
      UNKNOWN = 0;
      SSL3 = 0x300;
      TLS1 = 0x301;
      TLS1_1 = 0x302;
      TLS1_2 = 0x303;
      TLS1_3 = 0x304;
      DTLS1 = 0xFEFF;
      DTLS1_2 = 0xFEFD;
      DTLS1_BAD = 0x0100;
    }

    // - TLS cipher-suites: https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-4
    enum CipherSuite {
      TLS_NULL_WITH_NULL_NULL = 0x0000;
      TLS_RSA_WITH_NULL_MD5 = 0x0001;
      TLS_RSA_WITH_NULL_SHA = 0x0002;
      TLS_RSA_EXPORT_WITH_RC4_40_MD5 = 0x0003;
      TLS_RSA_WITH_RC4_128_MD5 = 0x0004;
      TLS_RSA_WITH_RC4_128_SHA = 0x0005;
      TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 = 0x0006;
      TLS_RSA_WITH_IDEA_CBC_SHA = 0x0007;
      TLS_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x0008;
      TLS_RSA_WITH_DES_CBC_SHA = 0x0009;
      TLS_RSA_WITH_3DES_EDE_CBC_SHA = 0x000A;
      TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA = 0x000B;
      TLS_DH_DSS_WITH_DES_CBC_SHA = 0x000C;
      TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA = 0x000D;
      TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x000E;
      TLS_DH_RSA_WITH_DES_CBC_SHA = 0x000F;
      TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA = 0x0010;
      TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA = 0x0011;
      TLS_DHE_DSS_WITH_DES_CBC_SHA = 0x0012;
      TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = 0x0013;
      TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x0014;
      TLS_DHE_RSA_WITH_DES_CBC_SHA = 0x0015;
      TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = 0x0016;
      TLS_DH_anon_EXPORT_WITH_RC4_40_MD5 = 0x0017;
      TLS_DH_anon_WITH_RC4_128_MD5 = 0x0018;
      TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA = 0x0019;
      TLS_DH_anon_WITH_DES_CBC_SHA = 0x001A;
      TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = 0x001B;
      TLS_KRB5_WITH_DES_CBC_SHA = 0x001E;
      TLS_KRB5_WITH_3DES_EDE_CBC_SHA = 0x001F;
      TLS_KRB5_WITH_RC4_128_SHA = 0x0020;
      TLS_KRB5_WITH_IDEA_CBC_SHA = 0x0021;
      TLS_KRB5_WITH_DES_CBC_MD5 = 0x0022;
      TLS_KRB5_WITH_3DES_EDE_CBC_MD5 = 0x0023;
      TLS_KRB5_WITH_RC4_128_MD5 = 0x0024;
      TLS_KRB5_WITH_IDEA_CBC_MD5 = 0x0025;
      TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA = 0x0026;
      TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA = 0x0027;
      TLS_KRB5_EXPORT_WITH_RC4_40_SHA = 0x0028;
      TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5 = 0x0029;
      TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5 = 0x002A;
      TLS_KRB5_EXPORT_WITH_RC4_40_MD5 = 0x002B;
      TLS_PSK_WITH_NULL_SHA = 0x002C;
      TLS_DHE_PSK_WITH_NULL_SHA = 0x002D;
      TLS_RSA_PSK_WITH_NULL_SHA = 0x002E;
      TLS_RSA_WITH_AES_128_CBC_SHA = 0x002F;
      TLS_DH_DSS_WITH_AES_128_CBC_SHA = 0x0030;
      TLS_DH_RSA_WITH_AES_128_CBC_SHA = 0x0031;
      TLS_DHE_DSS_WITH_AES_128_CBC_SHA = 0x0032;
      TLS_DHE_RSA_WITH_AES_128_CBC_SHA = 0x0033;
      TLS_DH_anon_WITH_AES_128_CBC_SHA = 0x0034;
      TLS_RSA_WITH_AES_256_CBC_SHA = 0x0035;
      TLS_DH_DSS_WITH_AES_256_CBC_SHA = 0x0036;
      TLS_DH_RSA_WITH_AES_256_CBC_SHA = 0x0037;
      TLS_DHE_DSS_WITH_AES_256_CBC_SHA = 0x0038;
      TLS_DHE_RSA_WITH_AES_256_CBC_SHA = 0x0039;
      TLS_DH_anon_WITH_AES_256_CBC_SHA = 0x003A;
      TLS_RSA_WITH_NULL_SHA256 = 0x003B;
      TLS_RSA_WITH_AES_128_CBC_SHA256 = 0x003C;
      TLS_RSA_WITH_AES_256_CBC_SHA256 = 0x003D;
      TLS_DH_DSS_WITH_AES_128_CBC_SHA256 = 0x003E;
      TLS_DH_RSA_WITH_AES_128_CBC_SHA256 = 0x003F;
      TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = 0x0040;
      TLS_RSA_WITH_CAMELLIA_128_CBC_SHA = 0x0041;
      TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA = 0x0042;
      TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA = 0x0043;
      TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA = 0x0044;
      TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA = 0x0045;
      TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA = 0x0046;
      TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = 0x0067;
      TLS_DH_DSS_WITH_AES_256_CBC_SHA256 = 0x0068;
      TLS_DH_RSA_WITH_AES_256_CBC_SHA256 = 0x0069;
      TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = 0x006A;
      TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = 0x006B;
      TLS_DH_anon_WITH_AES_128_CBC_SHA256 = 0x006C;
      TLS_DH_anon_WITH_AES_256_CBC_SHA256 = 0x006D;
      TLS_RSA_WITH_CAMELLIA_256_CBC_SHA = 0x0084;
      TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA = 0x0085;
      TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA = 0x0086;
      TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA = 0x0087;
      TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA = 0x0088;
      TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA = 0x0089;
      TLS_PSK_WITH_RC4_128_SHA = 0x008A;
      TLS_PSK_WITH_3DES_EDE_CBC_SHA = 0x008B;
      TLS_PSK_WITH_AES_128_CBC_SHA = 0x008C;
      TLS_PSK_WITH_AES_256_CBC_SHA = 0x008D;
      TLS_DHE_PSK_WITH_RC4_128_SHA = 0x008E;
      TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA = 0x008F;
      TLS_DHE_PSK_WITH_AES_128_CBC_SHA = 0x0090;
      TLS_DHE_PSK_WITH_AES_256_CBC_SHA = 0x0091;
      TLS_RSA_PSK_WITH_RC4_128_SHA = 0x0092;
      TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA = 0x0093;
      TLS_RSA_PSK_WITH_AES_128_CBC_SHA = 0x0094;
      TLS_RSA_PSK_WITH_AES_256_CBC_SHA = 0x0095;
      TLS_RSA_WITH_SEED_CBC_SHA = 0x0096;
      TLS_DH_DSS_WITH_SEED_CBC_SHA = 0x0097;
      TLS_DH_RSA_WITH_SEED_CBC_SHA = 0x0098;
      TLS_DHE_DSS_WITH_SEED_CBC_SHA = 0x0099;
      TLS_DHE_RSA_WITH_SEED_CBC_SHA = 0x009A;
      TLS_DH_anon_WITH_SEED_CBC_SHA = 0x009B;
      TLS_RSA_WITH_AES_128_GCM_SHA256 = 0x009C;
      TLS_RSA_WITH_AES_256_GCM_SHA384 = 0x009D;
      TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = 0x009E;
      TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = 0x009F;
      TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = 0x00A0;
      TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = 0x00A1;
      TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = 0x00A2;
      TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = 0x00A3;
      TLS_DH_DSS_WITH_AES_128_GCM_SHA256 = 0x00A4;
      TLS_DH_DSS_WITH_AES_256_GCM_SHA384 = 0x00A5;
      TLS_DH_anon_WITH_AES_128_GCM_SHA256 = 0x00A6;
      TLS_DH_anon_WITH_AES_256_GCM_SHA384 = 0x00A7;
      TLS_PSK_WITH_AES_128_GCM_SHA256 = 0x00A8;
      TLS_PSK_WITH_AES_256_GCM_SHA384 = 0x00A9;
      TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 = 0x00AA;
      TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 = 0x00AB;
      TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 = 0x00AC;
      TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 = 0x00AD;
      TLS_PSK_WITH_AES_128_CBC_SHA256 = 0x00AE;
      TLS_PSK_WITH_AES_256_CBC_SHA384 = 0x00AF;
      TLS_PSK_WITH_NULL_SHA256 = 0x00B0;
      TLS_PSK_WITH_NULL_SHA384 = 0x00B1;
      TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 = 0x00B2;
      TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 = 0x00B3;
      TLS_DHE_PSK_WITH_NULL_SHA256 = 0x00B4;
      TLS_DHE_PSK_WITH_NULL_SHA384 = 0x00B5;
      TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 = 0x00B6;
      TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 = 0x00B7;
      TLS_RSA_PSK_WITH_NULL_SHA256 = 0x00B8;
      TLS_RSA_PSK_WITH_NULL_SHA384 = 0x00B9;
      TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 = 0x00BA;
      TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 = 0x00BB;
      TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 = 0x00BC;
      TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 = 0x00BD;
      TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 = 0x00BE;
      TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256 = 0x00BF;
      TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 = 0x00C0;
      TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 = 0x00C1;
      TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 = 0x00C2;
      TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 = 0x00C3;
      TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 = 0x00C4;
      TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256 = 0x00C5;
      TLS_SM4_GCM_SM3 = 0x00C6;
      TLS_SM4_CCM_SM3 = 0x00C7;
      TLS_EMPTY_RENEGOTIATION_INFO_SCSV = 0x00FF;
      Reserved = 0x0A0A;
      Unassigned = 0x1300;
      TLS_AES_128_GCM_SHA256 = 0x1301;
      TLS_AES_256_GCM_SHA384 = 0x1302;
      TLS_CHACHA20_POLY1305_SHA256 = 0x1303;
      TLS_AES_128_CCM_SHA256 = 0x1304;
      TLS_AES_128_CCM_8_SHA256 = 0x1305;
      TLS_AEGIS_256_SHA384 = 0x1306;
      TLS_AEGIS_128L_SHA256 = 0x1307;
      TLS_FALLBACK_SCSV = 0x5600;
      TLS_ECDH_ECDSA_WITH_NULL_SHA = 0xC001;
      TLS_ECDH_ECDSA_WITH_RC4_128_SHA = 0xC002;
      TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA = 0xC003;
      TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA = 0xC004;
      TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA = 0xC005;
      TLS_ECDHE_ECDSA_WITH_NULL_SHA = 0xC006;
      TLS_ECDHE_ECDSA_WITH_RC4_128_SHA = 0xC007;
      TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = 0xC008;
      TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = 0xC009;
      TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = 0xC00A;
      TLS_ECDH_RSA_WITH_NULL_SHA = 0xC00B;
      TLS_ECDH_RSA_WITH_RC4_128_SHA = 0xC00C;
      TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA = 0xC00D;
      TLS_ECDH_RSA_WITH_AES_128_CBC_SHA = 0xC00E;
      TLS_ECDH_RSA_WITH_AES_256_CBC_SHA = 0xC00F;
      TLS_ECDHE_RSA_WITH_NULL_SHA = 0xC010;
      TLS_ECDHE_RSA_WITH_RC4_128_SHA = 0xC011;
      TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = 0xC012;
      TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = 0xC013;
      TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = 0xC014;
      TLS_ECDH_anon_WITH_NULL_SHA = 0xC015;
      TLS_ECDH_anon_WITH_RC4_128_SHA = 0xC016;
      TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA = 0xC017;
      TLS_ECDH_anon_WITH_AES_128_CBC_SHA = 0xC018;
      TLS_ECDH_anon_WITH_AES_256_CBC_SHA = 0xC019;
      TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA = 0xC01A;
      TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA = 0xC01B;
      TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA = 0xC01C;
      TLS_SRP_SHA_WITH_AES_128_CBC_SHA = 0xC01D;
      TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA = 0xC01E;
      TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA = 0xC01F;
      TLS_SRP_SHA_WITH_AES_256_CBC_SHA = 0xC020;
      TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA = 0xC021;
      TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA = 0xC022;
      TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = 0xC023;
      TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = 0xC024;
      TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 = 0xC025;
      TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 = 0xC026;
      TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = 0xC027;
      TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = 0xC028;
      TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 = 0xC029;
      TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 = 0xC02A;
      TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = 0xC02B;
      TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = 0xC02C;
      TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 = 0xC02D;
      TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 = 0xC02E;
      TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = 0xC02F;
      TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = 0xC030;
      TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 = 0xC031;
      TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 = 0xC032;
      TLS_ECDHE_PSK_WITH_RC4_128_SHA = 0xC033;
      TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA = 0xC034;
      TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA = 0xC035;
      TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA = 0xC036;
      TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 = 0xC037;
      TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 = 0xC038;
      TLS_ECDHE_PSK_WITH_NULL_SHA = 0xC039;
      TLS_ECDHE_PSK_WITH_NULL_SHA256 = 0xC03A;
      TLS_ECDHE_PSK_WITH_NULL_SHA384 = 0xC03B;
      TLS_RSA_WITH_ARIA_128_CBC_SHA256 = 0xC03C;
      TLS_RSA_WITH_ARIA_256_CBC_SHA384 = 0xC03D;
      TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256 = 0xC03E;
      TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384 = 0xC03F;
      TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256 = 0xC040;
      TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384 = 0xC041;
      TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256 = 0xC042;
      TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384 = 0xC043;
      TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256 = 0xC044;
      TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384 = 0xC045;
      TLS_DH_anon_WITH_ARIA_128_CBC_SHA256 = 0xC046;
      TLS_DH_anon_WITH_ARIA_256_CBC_SHA384 = 0xC047;
      TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256 = 0xC048;
      TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384 = 0xC049;
      TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256 = 0xC04A;
      TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384 = 0xC04B;
      TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256 = 0xC04C;
      TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384 = 0xC04D;
      TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256 = 0xC04E;
      TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384 = 0xC04F;
      TLS_RSA_WITH_ARIA_128_GCM_SHA256 = 0xC050;
      TLS_RSA_WITH_ARIA_256_GCM_SHA384 = 0xC051;
      TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256 = 0xC052;
      TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384 = 0xC053;
      TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256 = 0xC054;
      TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384 = 0xC055;
      TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256 = 0xC056;
      TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384 = 0xC057;
      TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256 = 0xC058;
      TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384 = 0xC059;
      TLS_DH_anon_WITH_ARIA_128_GCM_SHA256 = 0xC05A;
      TLS_DH_anon_WITH_ARIA_256_GCM_SHA384 = 0xC05B;
      TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 = 0xC05C;
      TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 = 0xC05D;
      TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 = 0xC05E;
      TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 = 0xC05F;
      TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 = 0xC060;
      TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 = 0xC061;
      TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 = 0xC062;
      TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 = 0xC063;
      TLS_PSK_WITH_ARIA_128_CBC_SHA256 = 0xC064;
      TLS_PSK_WITH_ARIA_256_CBC_SHA384 = 0xC065;
      TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256 = 0xC066;
      TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384 = 0xC067;
      TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256 = 0xC068;
      TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384 = 0xC069;
      TLS_PSK_WITH_ARIA_128_GCM_SHA256 = 0xC06A;
      TLS_PSK_WITH_ARIA_256_GCM_SHA384 = 0xC06B;
      TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256 = 0xC06C;
      TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384 = 0xC06D;
      TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256 = 0xC06E;
      TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384 = 0xC06F;
      TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256 = 0xC070;
      TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384 = 0xC071;
      TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = 0xC072;
      TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = 0xC073;
      TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = 0xC074;
      TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = 0xC075;
      TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 = 0xC076;
      TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 = 0xC077;
      TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 = 0xC078;
      TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 = 0xC079;
      TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 = 0xC07A;
      TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 = 0xC07B;
      TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = 0xC07C;
      TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = 0xC07D;
      TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256 = 0xC07E;
      TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384 = 0xC07F;
      TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256 = 0xC080;
      TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384 = 0xC081;
      TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256 = 0xC082;
      TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384 = 0xC083;
      TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256 = 0xC084;
      TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384 = 0xC085;
      TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = 0xC086;
      TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = 0xC087;
      TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = 0xC088;
      TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = 0xC089;
      TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = 0xC08A;
      TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = 0xC08B;
      TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 = 0xC08C;
      TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 = 0xC08D;
      TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 = 0xC08E;
      TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 = 0xC08F;
      TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256 = 0xC090;
      TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384 = 0xC091;
      TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 = 0xC092;
      TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 = 0xC093;
      TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 = 0xC094;
      TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 = 0xC095;
      TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = 0xC096;
      TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = 0xC097;
      TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 = 0xC098;
      TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 = 0xC099;
      TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = 0xC09A;
      TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = 0xC09B;
      TLS_RSA_WITH_AES_128_CCM = 0xC09C;
      TLS_RSA_WITH_AES_256_CCM = 0xC09D;
      TLS_DHE_RSA_WITH_AES_128_CCM = 0xC09E;
      TLS_DHE_RSA_WITH_AES_256_CCM = 0xC09F;
      TLS_RSA_WITH_AES_128_CCM_8 = 0xC0A0;
      TLS_RSA_WITH_AES_256_CCM_8 = 0xC0A1;
      TLS_DHE_RSA_WITH_AES_128_CCM_8 = 0xC0A2;
      TLS_DHE_RSA_WITH_AES_256_CCM_8 = 0xC0A3;
      TLS_PSK_WITH_AES_128_CCM = 0xC0A4;
      TLS_PSK_WITH_AES_256_CCM = 0xC0A5;
      TLS_DHE_PSK_WITH_AES_128_CCM = 0xC0A6;
      TLS_DHE_PSK_WITH_AES_256_CCM = 0xC0A7;
      TLS_PSK_WITH_AES_128_CCM_8 = 0xC0A8;
      TLS_PSK_WITH_AES_256_CCM_8 = 0xC0A9;
      TLS_PSK_DHE_WITH_AES_128_CCM_8 = 0xC0AA;
      TLS_PSK_DHE_WITH_AES_256_CCM_8 = 0xC0AB;
      TLS_ECDHE_ECDSA_WITH_AES_128_CCM = 0xC0AC;
      TLS_ECDHE_ECDSA_WITH_AES_256_CCM = 0xC0AD;
      TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 = 0xC0AE;
      TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8 = 0xC0AF;
      TLS_ECCPWD_WITH_AES_128_GCM_SHA256 = 0xC0B0;
      TLS_ECCPWD_WITH_AES_256_GCM_SHA384 = 0xC0B1;
      TLS_ECCPWD_WITH_AES_128_CCM_SHA256 = 0xC0B2;
      TLS_ECCPWD_WITH_AES_256_CCM_SHA384 = 0xC0B3;
      TLS_SHA256_SHA256 = 0xC0B4;
      TLS_SHA384_SHA384 = 0xC0B5;
      TLS_GOSTR341112_256_WITH_KUZNYECHIK_CTR_OMAC = 0xC100;
      TLS_GOSTR341112_256_WITH_MAGMA_CTR_OMAC = 0xC101;
      TLS_GOSTR341112_256_WITH_28147_CNT_IMIT = 0xC102;
      TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_L = 0xC103;
      TLS_GOSTR341112_256_WITH_MAGMA_MGM_L = 0xC104;
      TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_S = 0xC105;
      TLS_GOSTR341112_256_WITH_MAGMA_MGM_S = 0xC106;
      TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = 0xCCA8;
      TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 = 0xCCA9;
      TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = 0xCCAA;
      TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 = 0xCCAB;
      TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 = 0xCCAC;
      TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256 = 0xCCAD;
      TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256 = 0xCCAE;
      TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256 = 0xD001;
      TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384 = 0xD002;
      TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256 = 0xD003;
      TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256 = 0xD005;
    }

    // - TLS extensions: https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml
    enum Extension {
      SERVER_NAME = 0;
      MAX_FRAGMENT_LENGTH = 1;
      CLIENT_CERTIFICATE_URL = 2;
      TRUSTED_CA_KEYS = 3;
      TRUNCATED_HMAC = 4;
      STATUS_REQUEST = 5;
      USER_MAPPING = 6;
      CLIENT_AUTHZ = 7;
      SERVER_AUTHZ = 8;
      CERT_TYPE = 9;
      SUPPORTED_GROUPS = 10;
      EC_POINT_FORMATS = 11;
      SRP = 12;
      SIGNATURE_ALGORITHMS = 13;
      USE_SRTP = 14;
      HEARTBEAT = 15;
      APPLICATION_LAYER_PROTOCOL_NEGOTIATION = 16;
      STATUS_REQUEST_V2 = 17;
      SIGNED_CERTIFICATE_TIMESTAMP = 18;
      CLIENT_CERTIFICATE_TYPE = 19;
      SERVER_CERTIFICATE_TYPE = 20;
      PADDING = 21;
      ENCRYPT_THEN_MAC = 22;
      EXTENDED_MASTER_SECRET = 23;
      TOKEN_BINDING = 24;
      CACHED_INFO = 25;
      TLS_LTS = 26;
      COMPRESS_CERTIFICATE = 27;
      RECORD_SIZE_LIMIT = 28;
      PWD_PROTECT = 29;
      PWD_CLEAR = 30;
      PASSWORD_SALT = 31;
      TICKET_PINNING = 32;
      TLS_CERT_WITH_EXTERN_PSK = 33;
      DELEGATED_CREDENTIAL = 34;
      SESSION_TICKET = 35;
      TLMSP = 36;
      TLMSP_PROXYING = 37;
      TLMSP_DELEGATE = 38;
      SUPPORTED_EKT_CIPHERS = 39;
      PRE_SHARED_KEY = 41;
      EARLY_DATA = 42;
      SUPPORTED_VERSIONS = 43;
      COOKIE = 44;
      PSK_KEY_EXCHANGE_MODES = 45;
      CERTIFICATE_AUTHORITIES = 47;
      OID_FILTERS = 48;
      POST_HANDSHAKE_AUTH = 49;
      SIGNATURE_ALGORITHMS_CERT = 50;
      KEY_SHARE = 51;
      TRANSPARENCY_INFO = 52;
      CONNECTION_ID_DEPRECATED = 53;
      CONNECTION_ID = 54;
      EXTERNAL_ID_HASH = 55;
      EXTERNAL_SESSION_ID = 56;
      QUIC_TRANSPORT_PARAMETERS = 57;
      TICKET_REQUEST = 58;
      DNSSEC_CHAIN = 59;
      SEQUENCE_NUMBER_ENCRYPTION_ALGORITHMS = 60;
      // src: boringssl
      EXTENSION_APPLICATIONS_SETTINGS = 17513;
      EXTENSION_ENCRYPTED_CLIENT_HELLO = 65037;
      EXTENSION_RENEGOTIATION_INFO = 65281;
    }

    enum RenegotiationSupport {
      RENEGOTIATE_NEVER = 0;
      RENEGOTIATE_ONCE_AS_CLIENT = 1;
      RENEGOTIATE_FREELY_AS_CLIENT = 2;
    }

    enum SignatureScheme {
      NO_SIGNATURE = 0;
      RSA_PKCS1_SHA256 = 0x0401;
      RSA_PKCS1_SHA384 = 0x0501;
      RSA_PKCS1_SHA512 = 0x0601;
      ECDSA_SECP256R1_SHA256 = 0x0403;
      ECDSA_SECP384R1_SHA384 = 0x0503;
      ECDSA_SECP521R1_SHA512 = 0x0603;
      RSA_PSS_RSAE_SHA256 = 0x0804;
      RSA_PSS_RSAE_SHA384 = 0x0805;
      RSA_PSS_RSAE_SHA512 = 0x0806;
      ED25519 = 0x0807;
      ED448 = 0x0808;
      RSA_PSS_PSS_SHA256 = 0x0809;
      RSA_PSS_PSS_SHA384 = 0x080a;
      RSA_PSS_PSS_SHA512 = 0x080b;
      RSA_PKCS1_SHA1 = 0x0201;
      ECDSA_SHA1 = 0x0203;
    }

    message ExtensionData {
      message SignatureAlgorithms {
        repeated SignatureScheme supportedSignatureAlgorithms = 1;
      }

      message ApplicationLayerProtocolNegotiation {
        repeated string protocols = 1;
      }

      message RecordSizeLimit {
        uint32 limit = 1;
      }

      message CompressCertificate {
        enum CertificateCompression {
          NO_COMPRESSION = 0;
          ZLIB = 1;
          BROTLI = 2;
          ZSTD = 3;
        }

        repeated CertificateCompression algorithms = 1;
      }

      message SupportedVersions {
        repeated ProtocolVersion versions = 1;
      }

      message PSKKeyExchangeModes {
        enum Mode {
          PLAIN = 0;
          DHE = 1;
        }
        repeated Mode modes = 1;
      }

      message KeyShareExtension {
        message KeyShare {
          EllipticCurve group = 1;
          bytes data = 2;
        }
        repeated KeyShare keyShares = 1;
      }

      message ExtensionApplicationsSettings {
        repeated string protocols = 1;
      }

      message ExtensionRenegotiationInfo {
        RenegotiationSupport renegotiationSupport = 1;
      }

      message ExtensionEncryptedClientHello {
        enum HKDF {
          HKDF_RESERVED = 0;
          HKDF_SHA256 = 1;
          HKDF_SHA384 = 2;
          HKDF_SHA512 = 3;
        }

        enum HPKEAEAD {
          HPKEAEAD_RESERVED = 0;
          HPKEAEAD_AES_128_GCM = 1;
          HPKEAEAD_AES_256_GCM = 2;
          HPKEAEAD_CHACHA20POLY1305 = 3;
        }

        message HPKESymmetricCipherSuite {
          HKDF kdfId = 1;
          HPKEAEAD aeadId = 2;
        }

        repeated HPKESymmetricCipherSuite candidateCipherSuites = 1;
        repeated uint32 candidatePayloadLens = 2;
      }

      Extension extensionId = 1;
      SignatureAlgorithms signatureAlgorithms = 13;
      ApplicationLayerProtocolNegotiation applicationLayerProtocolNegotiation = 16;
      CompressCertificate compressCertificate = 27;
      RecordSizeLimit recordSizeLimit = 28;
      SupportedVersions supportedVersions = 43;
      PSKKeyExchangeModes pskKeyExchangeModes = 45;
      KeyShareExtension keyShareExtension = 51;
      ExtensionApplicationsSettings extensionApplicationsSettings = 17513;
      ExtensionEncryptedClientHello extensionEncryptedClientHello = 65037;
      ExtensionRenegotiationInfo extensionRenegotiationInfo = 65281;
    }

    // - Elliptic curves: https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-8
    enum EllipticCurve {
      RESERVED = 0;
      SECT163K1 = 1;
      SECT163R1 = 2;
      SECT163R2 = 3;
      SECT193R1 = 4;
      SECT193R2 = 5;
      SECT233K1 = 6;
      SECT233R1 = 7;
      SECT239K1 = 8;
      SECT283K1 = 9;
      SECT283R1 = 10;
      SECT409K1 = 11;
      SECT409R1 = 12;
      SECT571K1 = 13;
      SECT571R1 = 14;
      SECP160K1 = 15;
      SECP160R1 = 16;
      SECP160R2 = 17;
      SECP192K1 = 18;
      SECP192R1 = 19;
      SECP224K1 = 20;
      SECP224R1 = 21;
      SECP256K1 = 22;
      SECP256R1 = 23;
      SECP384R1 = 24;
      SECP521R1 = 25;
      BRAINPOOLP256R1 = 26;
      BRAINPOOLP384R1 = 27;
      BRAINPOOLP512R1 = 28;
      X25519 = 29;
      X448 = 30;
      BRAINPOOLP256R1TLS13 = 31;
      BRAINPOOLP384R1TLS13 = 32;
      BRAINPOOLP512R1TLS13 = 33;
      GC256A = 34;
      GC256B = 35;
      GC256C = 36;
      GC256D = 37;
      GC512A = 38;
      GC512B = 39;
      GC512C = 40;
      CURVESM2 = 41;
      FFDHE2048 = 256;
      FFDHE3072 = 257;
      FFDHE4096 = 258;
      FFDHE6144 = 259;
      FFDHE8192 = 260;
      X25519KYBER512DRAFT00    = 0xfe30;
      X25519KYBER768DRAFT00    = 0x6399;
      X25519KYBER768DRAFT00OLD = 0xfe31;
      P256Kyber768Draft00      = 0xfe32;
      ARBITRARY_EXPLICIT_PRIME_CURVES = 65281;
      ARBITRARY_EXPLICIT_CHAR2_CURVES = 65282;
    }

    // https://www.rfc-editor.org/rfc/rfc4492#section-5.1.2
    enum EllipticCurvePointFormat {
      UNCOMPRESSED = 0;
      ANSI_X962_COMPRESSED_PRIME = 1;
      ANSI_X962_COMPRESSED_CHAR2 = 2;
    }

    ProtocolVersion version = 1;
    repeated CipherSuite cipherSuites = 2;
    repeated Extension extensions = 3;
    repeated EllipticCurve ellipticCurves = 4;
    repeated EllipticCurvePointFormat ellipticCurvePointFormats = 5;
    repeated ExtensionData extensionData = 6;
  }

  message HTTPFingerprint {
    message PriorityFrameOpts {
      int64 streamId = 1;
      int64 streamDep = 2;
      bool exclusive = 3;
      int32 weight = 4;
    }

    message SettingsFrameOpts {
      int64 headerTableSize = 1;
      int64 enablePush = 2;
      int64 maxConcurrentStreams = 3;
      int64 initialWindowSize = 4;
      int64 maxFrameSize = 5;
      int64 maxHeaderListSize = 6;
    }

    // HTTP 1
    repeated string headerOrder = 1;
    // HTTP 2
    repeated string pseudoHeaderOrder = 2;
    SettingsFrameOpts settingsFrame = 3;
    int64 windowUpdateIncrement = 4;
    repeated PriorityFrameOpts priorityFrames = 5;
    PriorityFrameOpts headerFramePriority = 6;
  }

  message GLCapability {
    repeated bool boolValue = 1;
    repeated int64 intValue = 2;
    repeated double floatValue = 3;
    repeated string stringValue = 4;
    int64 enumValue = 10;
    string enumName = 11;
  }

  message BrowserCollection {
    int64 id = 1;
    string hash = 2;
    repeated string listData = 3;
    map<string, string> mapData = 4;
    map<string, GLCapability> glCapabilities = 5;
  }

  message BrowserScreen {
    message Orientation {
      int32 angle = 1;
      string type = 2;
    }

    int32 availWidth = 1;
    int32 availHeight = 2;
    int32 width = 3;
    int32 height = 4;
    int32 colorDepth = 5;
    int32 pixelDepth = 6;
    int32 availLeft = 7;
    int32 availTop = 8;
    bool isExtended = 9;
    Orientation orientation = 10;
  }

  message WebGPU {
    message Features {
      int64 size = 1;
    }

    Features features = 1;
    map<string, int64> limits = 2;
    bool isFallbackAdapter = 3;
    string vendor = 4;
    string architecture = 5;
    string device = 6;
    string description = 7;
  }

  message SpeechSynthesis {
      string voiceURI = 1;
      string name = 2;
      string lang = 3;
      bool localService = 4;
      bool default = 5;
  }

  message Plugin {
    message MIMEType {
      string type = 1;
      string suffixes = 2;
      string description = 3;
    }

    string name = 1;
    string fileName = 2;
    string description = 3;
    map<string, MIMEType> supportedMIMETypes = 4;
  }

  message HighEntropyValues {
    message Brand {
      string brand = 1;
      string version = 2;
    }

    string architecture = 1;
    string bitness = 2;
    bool mobile = 3;
    string model = 4;
    string platform = 5;
    string platformVersion = 6;
    string usFullVersion = 7;
    repeated Brand brands = 8;
    repeated Brand fullVersionList = 9;
  }

  string version = 1;
  string name = 2;
  string userAgent = 3;
  string brandHeader = 4;

  TLSFingerprint tlsFingerprint = 5;
  HTTPFingerprint httpFingerprint = 6;

  // src: https://kaliiiiiiiiii.github.io/driverless-fp-collector/
  string appCodeName = 20;
  string appName = 21;
  string appVersion = 22;
  bool cookieEnabled = 23;
  int64 deviceMemory = 24;
  int32 doNotTrack = 25;
  int32 hardwareConcurrency = 26;
  string language = 27;
  repeated string languages = 28;
  int32 maxTouchPoints = 29;
  bool pdfViewerEnabled = 30;
  string platform = 31;
  string product = 32;
  string productSub = 33;
  string vendor = 34;
  string vendorSub = 35;
  bool webdriver = 36;
  double devicePixelRatio = 37;
  int32 innerWidth = 38;
  int32 innerHeight = 39;
  int32 outerWidth = 40;
  int32 outerHeight = 41;
  BrowserScreen screen = 42;
  WebGPU webGPU = 43;
  repeated SpeechSynthesis speechSynthesis = 44;
  repeated Plugin plugins = 45;
  HighEntropyValues highEntropyValues = 46;

  BrowserCollection availableFonts = 100;
  BrowserCollection navigator = 101;
  BrowserCollection window = 102;
  BrowserCollection document = 103;
  BrowserCollection documentElement = 104;
  BrowserCollection audioTypes = 105;
  BrowserCollection videoTypes = 106;
  BrowserCollection css = 107;
  BrowserCollection gl = 108;
  BrowserCollection gl2 = 109;
  BrowserCollection glExperimental = 110;
}

// Potentially common for more than just Android
message GPSLocation {
  enum LocationProvider {
    LocationProvider_NONE = 0; // Treat as random
    GPS = 1;
    NETWORK = 2;
    PASSIVE = 3;
  }

  double longitude = 1;
  double latitude = 2;
  double altitude = 3;
  LocationProvider provider = 4;
}

message Locale {
  string language = 1;
  string countryISO = 2;
}

message SIMCard {
  message IMEI {
    string TAC = 1;
    // src: https://en.wikipedia.org/wiki/International_Mobile_Equipment_Identity
    // AA	-	BB	BB	BB	-	CC	CC	CC	D
    // Where AA and BB = TAC, CC = serial (randomized) and D = Luhn validation
    string imei = 2;
  }

  message MEID {
    string RegionCode = 1;
    string ManufacturerCode = 2;
    // src: https://en.wikipedia.org/wiki/Mobile_equipment_identifier
    // R R	X	X	X	X	X	X	Z	Z	Z	Z	Z	Z	C
    // Where R = region, X = manufacturer, Z = serial (randomized) and C = Luhn validation
    string meid = 3;
  }

  // With or without country code?
  string phoneNumber = 1;
  // Provider and country information
  string MCC = 2;
  string MNC = 3;
  string carrier = 4;
  string countryISO = 5;
  string countryCode = 6;
  IMEI imei = 7;
  MEID meid = 8;
}

message MAC {
  string OUI = 1;
  string address = 2;
}

message Timezone {
  // IANA standard
  string name = 1;
}

message ScreenData {
  int32 density = 1; // in DPI
  int32 resolutionHorizontal = 2; // in pixels
  int32 resolutionVertical = 3; // in pixels
}

message CPUData {
  enum Architecture {
    UNKNOWN = 0;
    ARM = 1;
    ARM64 = 2;
    MIPS = 3;
    MIPSEL = 4;
    PPC = 5;
    PPC64 = 6;
    X32 = 7;
    X64 = 8;
  }

  Architecture arch = 1;
  string archName = 2;
  string model = 3;
  string brand = 4;
  string board = 5;

  repeated string abiList = 6;
}

// Android device
message AndroidDevice {
  message ID {
    uint64 id = 1;
  }

  // Src: https://apilevels.com/
  // BuildNumber defaults: https://source.android.com/docs/setup/about/build-numbers#source-code-tags-and-builds
  enum Version {
    AndroidVersion_NONE = 0;
    V1_0 = 1; // BASE
    V1_1 = 2; // BASE_1_1
    V1_5 = 3; // CUPCAKE
    V1_6 = 4; // DONUT
    V2 = 5; // ECLAIR
    V2_0_1 = 6; // ECLAIR_0_1
    V2_1 = 7; // ECLAIR_MR1
    V2_2 = 8; // FROYO
    V2_3_2 = 9; // GINGERBREAD
    V2_3_7 = 10; // GINGERBREAD_MR1
    V3_0 = 11; // HONEYCOMB
    v3_1 = 12; // HONEYCOMB_MR1
    V3_2 = 13; // HONEYCOMB_MR2
    V4_0_2 = 14; // ICE_CREAM_SANDWICH
    V4_0_4 = 15; // ICE_CREAM_SANDWICH_MR1
    V4_1 = 16; // JELLY_BEAN
    V4_2 = 17; // JELLY_BEAN_MR1
    V4_3 = 18; // JELLY_BEAN_MR2
    V4_4 = 19; // KITKAT
    V4_4W = 20; // KITKAT_WATCH
    V5_0 = 21; // LOLLIPOP / L
    V5_1 = 22; // LOLLIPOP_MR1
    V6_0 = 23; // M
    V7_0 = 24; // N
    V7_1 = 25; // N_MR1
    V8_0 = 26; // O
    V8_1 = 27; // O_MR1
    V9_0 = 28; // P
    V10_0 = 29; // Q
    V11_0 = 30; // R
    V12_0 = 31; // S
    V12_0L = 32; // S_V2
    V13_0 = 33; // TIRAMISU
    V14_0 = 34; // UPSIDE_DOWN_CAKE
  }

  // https://developer.android.com/reference/android/os/Build
  message BuildData {
    string board = 1;
    string bootloader = 2;
    string brand = 3;
    string device = 4;
    string display = 5;
    string fingerprint = 6;
    string hardware = 7;
    string id = 8;
    string manufacturer = 9;
    string model = 10;
    string odmSku = 11;
    string product = 12;
    string sku = 13;
    string socManufacturer = 14;
    string socModel = 15;
    string tags = 16;
    string type = 17;
    string incrementalVersion = 18;
  }

  message DeviceSoftware {
    map<string, string> softwareMetaData = 1;
    // app package : version string
    map<string, string> appMetaData = 2;
  }

  ID id = 1;
  Version version = 2;
  BuildData build = 3;
  DeviceSoftware software = 4;
  // Everything below this can technically be abstracted to unified device
  ScreenData screen = 5;
  CPUData cpu = 6;
  Locale locale = 7;
  GPSLocation location = 8;
  Timezone timezone = 9;
  MAC macAddress = 10;
  repeated SIMCard simSlots = 11; // Dual SIM compatibility
}

// TODO: Unify in one or not?
/*
message Device {
  enum Type {
    UNKNOWN = 0;
    ANDROID = 1;
    IOS = 2;
    WINDOWS_DESKTOP = 3;
    MACOS = 4;
    LINUX_DESKTOP = 5;
  }

  message SpecificDeviceData {
    AndroidDevice androidDevice = 1;
    IOSDevice iosDevice = 2;
    WindowsDesktopDevice windowsDesktopDevice = 3;
    MacOSDesktopDevice macosDesktopDevice = 4;
    LinuxDesktopDevice linuxDesktopDevice = 5;
  }

  SpecificDeviceData specificDeviceData = 1;
}
 */

// TODO: Figure out what data is needed to spoof the devices below
/*
// IOS
message IOSDevice {

}

// Windows Desktop
message WindowsDesktopDevice {

}

// MacOS Desktop
message MacOSDesktopDevice {

}

// Linux Desktop
message LinuxDesktopDevice {

}

 */
